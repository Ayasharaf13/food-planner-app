// Generated by view binder compiler. Do not edit!
package com.example.foodplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.foodplanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnRegisterCategory;

  @NonNull
  public final RecyclerView recyclerCategory;

  @NonNull
  public final RecyclerView recyclerCountry;

  @NonNull
  public final RecyclerView recyclerIngrediance;

  @NonNull
  public final SearchView simpleSearchView;

  @NonNull
  public final TextView textCategory;

  @NonNull
  public final TextView txtIngredients;

  private FragmentSearchBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnRegisterCategory, @NonNull RecyclerView recyclerCategory,
      @NonNull RecyclerView recyclerCountry, @NonNull RecyclerView recyclerIngrediance,
      @NonNull SearchView simpleSearchView, @NonNull TextView textCategory,
      @NonNull TextView txtIngredients) {
    this.rootView = rootView;
    this.btnRegisterCategory = btnRegisterCategory;
    this.recyclerCategory = recyclerCategory;
    this.recyclerCountry = recyclerCountry;
    this.recyclerIngrediance = recyclerIngrediance;
    this.simpleSearchView = simpleSearchView;
    this.textCategory = textCategory;
    this.txtIngredients = txtIngredients;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRegisterCategory;
      Button btnRegisterCategory = ViewBindings.findChildViewById(rootView, id);
      if (btnRegisterCategory == null) {
        break missingId;
      }

      id = R.id.recyclerCategory;
      RecyclerView recyclerCategory = ViewBindings.findChildViewById(rootView, id);
      if (recyclerCategory == null) {
        break missingId;
      }

      id = R.id.recyclerCountry;
      RecyclerView recyclerCountry = ViewBindings.findChildViewById(rootView, id);
      if (recyclerCountry == null) {
        break missingId;
      }

      id = R.id.recyclerIngrediance;
      RecyclerView recyclerIngrediance = ViewBindings.findChildViewById(rootView, id);
      if (recyclerIngrediance == null) {
        break missingId;
      }

      id = R.id.simpleSearchView;
      SearchView simpleSearchView = ViewBindings.findChildViewById(rootView, id);
      if (simpleSearchView == null) {
        break missingId;
      }

      id = R.id.textCategory;
      TextView textCategory = ViewBindings.findChildViewById(rootView, id);
      if (textCategory == null) {
        break missingId;
      }

      id = R.id.txtIngredients;
      TextView txtIngredients = ViewBindings.findChildViewById(rootView, id);
      if (txtIngredients == null) {
        break missingId;
      }

      return new FragmentSearchBinding((ConstraintLayout) rootView, btnRegisterCategory,
          recyclerCategory, recyclerCountry, recyclerIngrediance, simpleSearchView, textCategory,
          txtIngredients);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
