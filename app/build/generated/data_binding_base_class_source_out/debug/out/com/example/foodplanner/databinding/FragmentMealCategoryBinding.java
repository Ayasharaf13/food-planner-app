// Generated by view binder compiler. Do not edit!
package com.example.foodplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.foodplanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMealCategoryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final RecyclerView recyclerMealCategory;

  @NonNull
  public final ImageView searchIconCategory;

  @NonNull
  public final EditText searchTextCategory;

  private FragmentMealCategoryBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout linearLayout, @NonNull RecyclerView recyclerMealCategory,
      @NonNull ImageView searchIconCategory, @NonNull EditText searchTextCategory) {
    this.rootView = rootView;
    this.linearLayout = linearLayout;
    this.recyclerMealCategory = recyclerMealCategory;
    this.searchIconCategory = searchIconCategory;
    this.searchTextCategory = searchTextCategory;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMealCategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMealCategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_meal_category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMealCategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.recyclerMealCategory;
      RecyclerView recyclerMealCategory = ViewBindings.findChildViewById(rootView, id);
      if (recyclerMealCategory == null) {
        break missingId;
      }

      id = R.id.searchIconCategory;
      ImageView searchIconCategory = ViewBindings.findChildViewById(rootView, id);
      if (searchIconCategory == null) {
        break missingId;
      }

      id = R.id.searchTextCategory;
      EditText searchTextCategory = ViewBindings.findChildViewById(rootView, id);
      if (searchTextCategory == null) {
        break missingId;
      }

      return new FragmentMealCategoryBinding((ConstraintLayout) rootView, linearLayout,
          recyclerMealCategory, searchIconCategory, searchTextCategory);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
