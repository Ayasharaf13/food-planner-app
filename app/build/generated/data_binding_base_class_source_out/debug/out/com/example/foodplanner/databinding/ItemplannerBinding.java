// Generated by view binder compiler. Do not edit!
package com.example.foodplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.foodplanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemplannerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnWatchItemPlanner;

  @NonNull
  public final ImageView imageDelteItemPlanner;

  @NonNull
  public final ImageView imgMealItemPlanner;

  @NonNull
  public final TextView nameMealItemPlanner;

  @NonNull
  public final TextView textCalender;

  private ItemplannerBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnWatchItemPlanner, @NonNull ImageView imageDelteItemPlanner,
      @NonNull ImageView imgMealItemPlanner, @NonNull TextView nameMealItemPlanner,
      @NonNull TextView textCalender) {
    this.rootView = rootView;
    this.btnWatchItemPlanner = btnWatchItemPlanner;
    this.imageDelteItemPlanner = imageDelteItemPlanner;
    this.imgMealItemPlanner = imgMealItemPlanner;
    this.nameMealItemPlanner = nameMealItemPlanner;
    this.textCalender = textCalender;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemplannerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemplannerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.itemplanner, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemplannerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnWatchItemPlanner;
      Button btnWatchItemPlanner = ViewBindings.findChildViewById(rootView, id);
      if (btnWatchItemPlanner == null) {
        break missingId;
      }

      id = R.id.imageDelteItemPlanner;
      ImageView imageDelteItemPlanner = ViewBindings.findChildViewById(rootView, id);
      if (imageDelteItemPlanner == null) {
        break missingId;
      }

      id = R.id.imgMealItemPlanner;
      ImageView imgMealItemPlanner = ViewBindings.findChildViewById(rootView, id);
      if (imgMealItemPlanner == null) {
        break missingId;
      }

      id = R.id.nameMealItemPlanner;
      TextView nameMealItemPlanner = ViewBindings.findChildViewById(rootView, id);
      if (nameMealItemPlanner == null) {
        break missingId;
      }

      id = R.id.textCalender;
      TextView textCalender = ViewBindings.findChildViewById(rootView, id);
      if (textCalender == null) {
        break missingId;
      }

      return new ItemplannerBinding((ConstraintLayout) rootView, btnWatchItemPlanner,
          imageDelteItemPlanner, imgMealItemPlanner, nameMealItemPlanner, textCalender);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
