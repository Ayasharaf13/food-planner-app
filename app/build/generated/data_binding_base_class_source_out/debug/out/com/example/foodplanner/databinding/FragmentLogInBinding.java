// Generated by view binder compiler. Do not edit!
package com.example.foodplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.foodplanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLogInBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonLogIn;

  @NonNull
  public final EditText editEmailAddressLogIn;

  @NonNull
  public final EditText editPasswordLogIn;

  @NonNull
  public final ImageView imgCutleryLogIn;

  @NonNull
  public final ImageView imgLineLogIn;

  @NonNull
  public final ImageView imgSpoonLogIn;

  @NonNull
  public final TextView tvLogIn;

  private FragmentLogInBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonLogIn,
      @NonNull EditText editEmailAddressLogIn, @NonNull EditText editPasswordLogIn,
      @NonNull ImageView imgCutleryLogIn, @NonNull ImageView imgLineLogIn,
      @NonNull ImageView imgSpoonLogIn, @NonNull TextView tvLogIn) {
    this.rootView = rootView;
    this.buttonLogIn = buttonLogIn;
    this.editEmailAddressLogIn = editEmailAddressLogIn;
    this.editPasswordLogIn = editPasswordLogIn;
    this.imgCutleryLogIn = imgCutleryLogIn;
    this.imgLineLogIn = imgLineLogIn;
    this.imgSpoonLogIn = imgSpoonLogIn;
    this.tvLogIn = tvLogIn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLogInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLogInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_log_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLogInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonLogIn;
      Button buttonLogIn = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogIn == null) {
        break missingId;
      }

      id = R.id.editEmailAddressLogIn;
      EditText editEmailAddressLogIn = ViewBindings.findChildViewById(rootView, id);
      if (editEmailAddressLogIn == null) {
        break missingId;
      }

      id = R.id.editPasswordLogIn;
      EditText editPasswordLogIn = ViewBindings.findChildViewById(rootView, id);
      if (editPasswordLogIn == null) {
        break missingId;
      }

      id = R.id.imgCutleryLogIn;
      ImageView imgCutleryLogIn = ViewBindings.findChildViewById(rootView, id);
      if (imgCutleryLogIn == null) {
        break missingId;
      }

      id = R.id.imgLineLogIn;
      ImageView imgLineLogIn = ViewBindings.findChildViewById(rootView, id);
      if (imgLineLogIn == null) {
        break missingId;
      }

      id = R.id.imgSpoonLogIn;
      ImageView imgSpoonLogIn = ViewBindings.findChildViewById(rootView, id);
      if (imgSpoonLogIn == null) {
        break missingId;
      }

      id = R.id.tvLogIn;
      TextView tvLogIn = ViewBindings.findChildViewById(rootView, id);
      if (tvLogIn == null) {
        break missingId;
      }

      return new FragmentLogInBinding((ConstraintLayout) rootView, buttonLogIn,
          editEmailAddressLogIn, editPasswordLogIn, imgCutleryLogIn, imgLineLogIn, imgSpoonLogIn,
          tvLogIn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
